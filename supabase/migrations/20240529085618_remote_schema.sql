
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."members_active" (
    "id" bigint NOT NULL,
    "uuid" "uuid" NOT NULL,
    "grade" "text" NOT NULL,
    "student_number" "text" NOT NULL,
    "roles" "text"[] NOT NULL
);

ALTER TABLE "public"."members_active" OWNER TO "postgres";

ALTER TABLE "public"."members_active" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."active_members_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."members_base" (
    "id" bigint NOT NULL,
    "uuid" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "icon_default_url" "text" NOT NULL,
    "icon_custom_url" "text",
    "first_name" "text" NOT NULL,
    "first_name_kana" "text" NOT NULL,
    "last_name" "text" NOT NULL,
    "last_name_kana" "text" NOT NULL,
    "graduation_year" smallint NOT NULL,
    "birthday" "date" NOT NULL,
    "gender" "text" NOT NULL,
    "telephone" "text" NOT NULL,
    "email" "text" NOT NULL,
    "student_type" "text" NOT NULL,
    "skills" "text"[] NOT NULL,
    "current_zip_code" "text" NOT NULL,
    "current_address" "text" NOT NULL,
    "parents_zip_code" "text" NOT NULL,
    "parents_address" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "permissions" bigint
);

ALTER TABLE "public"."members_base" OWNER TO "postgres";

ALTER TABLE "public"."members_base" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."base_members_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."members_external" (
    "id" bigint NOT NULL,
    "uuid" "uuid" NOT NULL,
    "school_name" "text" NOT NULL,
    "orgs" "text"[] NOT NULL
);

ALTER TABLE "public"."members_external" OWNER TO "postgres";

ALTER TABLE "public"."members_external" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."external_members_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."members_obog" (
    "id" bigint NOT NULL,
    "uuid" "uuid" NOT NULL,
    "student_number" "text",
    "company" "text",
    "roles" "text"[] NOT NULL
);

ALTER TABLE "public"."members_obog" OWNER TO "postgres";

ALTER TABLE "public"."members_obog" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."obog_members_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."payments" (
    "id" bigint NOT NULL,
    "uuid" "uuid" NOT NULL,
    "payee" "uuid" NOT NULL,
    "has_accountant_approved" boolean DEFAULT false NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."payments" OWNER TO "postgres";

ALTER TABLE "public"."payments" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."payments_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."permissions" (
    "id" bigint NOT NULL,
    "priority" smallint NOT NULL,
    "name" "text" NOT NULL,
    "description" "text"
);

ALTER TABLE "public"."permissions" OWNER TO "postgres";

ALTER TABLE "public"."permissions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."permissions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."members_active"
    ADD CONSTRAINT "active_members_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."members_active"
    ADD CONSTRAINT "active_members_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."members_active"
    ADD CONSTRAINT "active_members_student_number_key" UNIQUE ("student_number");

ALTER TABLE ONLY "public"."members_active"
    ADD CONSTRAINT "active_members_uuid_key" UNIQUE ("uuid");

ALTER TABLE ONLY "public"."members_base"
    ADD CONSTRAINT "base_members_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."members_base"
    ADD CONSTRAINT "base_members_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."members_base"
    ADD CONSTRAINT "base_members_uuid_key" UNIQUE ("uuid");

ALTER TABLE ONLY "public"."members_external"
    ADD CONSTRAINT "external_members_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."members_external"
    ADD CONSTRAINT "external_members_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."members_external"
    ADD CONSTRAINT "external_members_uuid_key" UNIQUE ("uuid");

ALTER TABLE ONLY "public"."members_obog"
    ADD CONSTRAINT "obog_members_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."members_obog"
    ADD CONSTRAINT "obog_members_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."members_obog"
    ADD CONSTRAINT "obog_members_student_number_key" UNIQUE ("student_number");

ALTER TABLE ONLY "public"."members_obog"
    ADD CONSTRAINT "obog_members_uuid_key" UNIQUE ("uuid");

ALTER TABLE ONLY "public"."payments"
    ADD CONSTRAINT "payments_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."payments"
    ADD CONSTRAINT "payments_uuid_key" UNIQUE ("uuid");

ALTER TABLE ONLY "public"."permissions"
    ADD CONSTRAINT "permissions_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."permissions"
    ADD CONSTRAINT "permissions_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."permissions"
    ADD CONSTRAINT "permissions_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."members_active"
    ADD CONSTRAINT "active_members_uuid_fkey" FOREIGN KEY ("uuid") REFERENCES "public"."members_base"("uuid") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."members_external"
    ADD CONSTRAINT "external_members_uuid_fkey" FOREIGN KEY ("uuid") REFERENCES "public"."members_base"("uuid") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."members_base"
    ADD CONSTRAINT "members_base_permissions_fkey" FOREIGN KEY ("permissions") REFERENCES "public"."permissions"("id") ON UPDATE CASCADE ON DELETE RESTRICT;

ALTER TABLE ONLY "public"."members_obog"
    ADD CONSTRAINT "obog_members_uuid_fkey" FOREIGN KEY ("uuid") REFERENCES "public"."members_base"("uuid") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."payments"
    ADD CONSTRAINT "payments_payee_fkey" FOREIGN KEY ("payee") REFERENCES "public"."members_base"("uuid") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."payments"
    ADD CONSTRAINT "payments_uuid_fkey" FOREIGN KEY ("uuid") REFERENCES "public"."members_base"("uuid") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "public"."members_active" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."members_base" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."members_external" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."members_obog" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."payments" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."permissions" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."members_active" TO "anon";
GRANT ALL ON TABLE "public"."members_active" TO "authenticated";
GRANT ALL ON TABLE "public"."members_active" TO "service_role";

GRANT ALL ON SEQUENCE "public"."active_members_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."active_members_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."active_members_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."members_base" TO "anon";
GRANT ALL ON TABLE "public"."members_base" TO "authenticated";
GRANT ALL ON TABLE "public"."members_base" TO "service_role";

GRANT ALL ON SEQUENCE "public"."base_members_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."base_members_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."base_members_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."members_external" TO "anon";
GRANT ALL ON TABLE "public"."members_external" TO "authenticated";
GRANT ALL ON TABLE "public"."members_external" TO "service_role";

GRANT ALL ON SEQUENCE "public"."external_members_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."external_members_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."external_members_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."members_obog" TO "anon";
GRANT ALL ON TABLE "public"."members_obog" TO "authenticated";
GRANT ALL ON TABLE "public"."members_obog" TO "service_role";

GRANT ALL ON SEQUENCE "public"."obog_members_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."obog_members_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."obog_members_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."payments" TO "anon";
GRANT ALL ON TABLE "public"."payments" TO "authenticated";
GRANT ALL ON TABLE "public"."payments" TO "service_role";

GRANT ALL ON SEQUENCE "public"."payments_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."payments_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."payments_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."permissions" TO "anon";
GRANT ALL ON TABLE "public"."permissions" TO "authenticated";
GRANT ALL ON TABLE "public"."permissions" TO "service_role";

GRANT ALL ON SEQUENCE "public"."permissions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."permissions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."permissions_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
